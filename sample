// Test from "http://lesscss.org/#docs"
// Variable

@nice-blue: #5B83AD;
@light-blue: (@nice-blue + #111);

#header { color: @light-blue; }

@fnord: "I am fnord.";
@var: 'fnord';           // content : @@foo; ?


// Simple mixins
#menu a {
  color: #111;
  .bordered;
}
.post a {
  color: red;
  .bordered;
}


// Parametrics Mixin
.border-radius (@radius) {
  border-radius: @radius;
  -moz-border-radius: @radius;
  -webkit-border-radius: @radius;
}
#header {
  .border-radius(4px);
}
.button {
  .border-radius(6px);
}

.wrap () {
  text-wrap: wrap;
  white-space: pre-wrap;
  white-space: -moz-pre-wrap;
  word-wrap: break-word;
  .box-shadow();
}

pre { .wrap }

.box-shadow (@x: 0, @y: 0, @blur: 1px, @color: #000) {
  box-shadow: @arguments;
  -moz-box-shadow: @arguments;
  -webkit-box-shadow: @arguments;
}
//.box-shadow(); TODO : Do it !

// Pattern matching

.mixin (dark, @color) {
  color: darken(@color, 10%);
}
.mixin (light, @color) {
  color: lighten(@color, 10%);
}
.mixin (@_, @color) {
  display: block;
}

@switch: light;

.class {
  .mixin(@switch, #888);
}
 // Arity !
.mixin (@a) {
  color: @a;
}
.mixin (@a, @b) {
  color: fade(@a, @b);
}
              // Guards
.mixin (@a) when (lightness(@a) >= 50%) {
  background-color: black;
}
.mixin (@a) when (lightness(@a) < 50%) {
  background-color: white;
}
.mixin (@a) {
  color: @a;
}

.class1 { .mixin(#ddd) }



// Operation

@base: 5%;
@filler: (@base * 2);
@other: (@base + @filler);

.f {
color: (#888 / 4);
background-color: (@base-color + #111);
height: (100% / 2 + @filler);
  background-color: spin(lighten(@base, 25%), 8);
  foo : round(1.67);

  background-image: url("@{base-url}/images/bg.png");  // String interpolation
}

.class {
  filter: ~"ms:alwaysHasItsOwnSyntax.For.Stuff()"; // Escaping
}

// @TODO :
// Nested class
// Namespace support
// Multi line comment
// Recognize of function & mixins
// Selector interpolation
